name: Release when "boostedhtml.js" changes

on:
  push:
    paths:
      - 'boostedhtml.js'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo apt-get install -y nodejs

      - name: Build JavaScript with Webpack
        run: npx webpack ./boostedhtml.js --mode=production

      - name: Add main.js to the repository
        run: git add ./dist/main.js

      - name: Push changes with curl
        run: |
          # Configure Git with the GitHub username and email
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Stage the changes
          git add .
    
          # Commit the changes
          git commit -m "Add main.js to the repository"

          # Create a branch-specific token to push changes
          GITHUB_TOKEN_BRANCH="${{ secrets.GIT_TOKEN }}:$GITHUB_REF"
    
          # Push the changes using curl
          curl -X POST -u "$GITHUB_TOKEN_BRANCH" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/git/refs/heads/${{ github.ref }}" -d '{
            "sha": "'$(git rev-parse HEAD)'",
            "force": false
          }'

      - name: Push changes
        run: git push

      - name: Generate a random tag
        id: random-tag
        run: echo "::set-output name=tag::$(openssl rand -hex 5)"

      - name: Create release
        id: create-release
        run: |
          TAG=${{ steps.random-tag.outputs.tag }}
          TITLE=$(git log --format=%B -n 1)
          BODY=$(git log --format=%s%n%b -n 1)
          
          # Create a release using GitHub API
          response=$(curl --request POST "https://api.github.com/repos/${{ github.repository }}/releases" \
            --header "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \  # Use GIT_TOKEN here
            --data '{
              "tag_name": "'"$TAG"'",
              "name": "'"$TITLE"'",
              "body": "'"$BODY"'"
            }')

          # Extract the release URL from the API response
          RELEASE_URL=$(echo "$response" | jq -r .html_url)
          echo "Release URL: $RELEASE_URL"

          # Upload the source code (main.js) as an asset to the release
          curl --header "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \  # Use GIT_TOKEN here
            --header "Content-Type: application/javascript" \
            --request POST \
            --data-binary "@./dist/main.js" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_URL/assets?name=main.js"
